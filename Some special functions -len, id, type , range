# Definition: Returns the length (number of items) of an object (such as a string, list, tuple, or dictionary).

my_string = "Hello, World!"
print(f"Length of the string: {len(my_string)}")  # Output: Length of the string: 13

my_list = [1, 2, 3, 4, 5]
print(f"Length of the list: {len(my_list)}")  # Output: Length of the list: 5

# Definition: Returns the unique identifier (memory address) of an object.

a = 10
b = 10
c = 20

print(f"ID of a: {id(a)}")  # Output: ID of a: <some_memory_address>
print(f"ID of b: {id(b)}")  # Output: ID of b: <same_memory_address_as_a>
print(f"ID of c: {id(c)}")  # Output: ID of c: <different_memory_address>

# Definition: Returns the type of an object.

x = 42
y = 3.14
z = "Hello"
is_true = True

print(f"Type of x: {type(x)}")  # Output: Type of x: <class 'int'>
print(f"Type of y: {type(y)}")  # Output: Type of y: <class 'float'>
print(f"Type of z: {type(z)}")  # Output: Type of z: <class 'str'>
print(f"Type of is_true: {type(is_true)}")  # Output: Type of is_true: <class 'bool'>

# Definition: Returns an immutable sequence of numbers within a specified range.

# range(stop)
for i in range(5):
    print(i, end=" ")  # Output: 0 1 2 3 4

print("\n")

# range(start, stop)
for i in range(2, 6):
    print(i, end=" ")  # Output: 2 3 4 5

print("\n")

# range(start, stop, step)
for i in range(1, 10, 2):
    print(i, end=" ")  # Output: 1 3 5 7 9

